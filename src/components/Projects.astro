---
import { getCollection } from 'astro:content'
import { Projects as ProjectsComponent } from './Projects'
import { Image } from 'astro:assets'

interface Props {
  title?: string
  subtitle?: string
  filter?: 'all' | 'active' | 'completed'
}

const { title, subtitle, filter = 'all' } = Astro.props

const projects = await getCollection('projects')

const images = import.meta.glob<{ default: ImageMetadata }>(
  '@assets/images/**/*.{jpeg,jpg,png,gif,webp}'
)

const filteredProjects = await Promise.all(
  projects
    .filter((project: any) => {
      if (filter === 'active') {
        return project.data.stage !== 'close-out'
      }

      if (filter === 'completed') {
        return project.data.stage === 'close-out'
      }

      return true
    })
    .map(async (project) => ({
      ...project,
      data: {
        ...project.data,
        featuredImage:
          images[
            project.data.featuredImage?.replace('@assets', '/src/assets')
          ]?.(),
      },
    }))
)
---

<ProjectsComponent title={title} subtitle={subtitle} filter={filter}>
  <div
    slot='projectsElement'
    class='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8'
  >
    {
      filteredProjects.map((project) => (
        <a href={`/projects/${project.id}`}>
          <Image
            width={300}
            height={200}
            class='h-48 w-full object-cover'
            src={project.data.featuredImage}
            alt={project.data.title}
          />
          <h3 class='text-2xl font-bold'>{project.data.title}</h3>
        </a>
      ))
    }
  </div>
</ProjectsComponent>
